#!/usr/bin/env dash

_program()
{
	core_usesIn core temporaryFiles
	core_usesIn bishbosh validate client
	
	bishbosh()
	{
		bishbosh_client_plaintext_find
		
		local TMP_FOLDER
		core_temporaryFiles_newFolderToRemoveOnExit
		local bishbosh_temporaryFolderPath="$TMP_FOLDER"
		
		bishbosh_connection_makeClientConnection
		
		echo hello
	}
}

_program_name='bish-bosh'
_program_version='unversioned'
_program_package_or_build=''
_program_copyright='(c) 2014 Raphael Cohn'
_program_licence='MIT'
_program_written_by='Raphael Cohn'
_program_path="$([ "${_program_fattening_program_path+set}" = 'set' ] && printf '%s\n' "$_program_fattening_program_path" || ([ "${0%/*}" = "${0}" ] && printf '%s\n' '.' || printf '%s\n' "${0%/*}"))"
_program_libPath="${_program_path}/lib"
_program_etcPath="${_program_path}/etc"
_program_varPath="${_program_path}/var"
_program_entrypoint='bishbosh'

_program_commandLine_parseInitialise()
{
	_program_default_backends="bash,ncat,nc6,nc,socat,tcpclient"
	if core_variable_isSet bishbosh_backends; then
		_program_configurationSet_bishbosh_backends=0
	else
		_program_configurationSet_bishbosh_backends=1
	fi
	
	if core_variable_isSet bishbosh_server; then
		_program_configurationSet_bishbosh_server=0
	else
		_program_configurationSet_bishbosh_server=1
	fi
	
	if core_variable_isSet bishbosh_port; then
		_program_configurationSet_bishbosh_port=0
	else
		_program_configurationSet_bishbosh_port=1
	fi

	_program_default_clientsPath="${_program_varPath}"/lib/"$_program_name"/clients
	if core_variable_isSet bishbosh_clientsPath; then
		_program_configurationSet_bishbosh_clientsPath=0
	else
		_program_configurationSet_bishbosh_clientsPath=1
	fi
	
	if core_variable_isSet bishbosh_transport; then
		_program_configurationSet_bishbosh_transport=0
	else
		_program_configurationSet_bishbosh_transport=1
	fi
	
	if core_variable_isSet bishbosh_sourceAddress; then
		_program_configurationSet_bishbosh_sourceAddress=0
	else
		_program_configurationSet_bishbosh_sourceAddress=1
	fi
	
	if core_variable_isSet bishbosh_sourcePort; then
		_program_configurationSet_bishbosh_sourcePort=0
	else
		_program_configurationSet_bishbosh_sourcePort=1
	fi
	
	if core_variable_isSet bishbosh_proxyKind; then
		_program_configurationSet_bishbosh_proxyKind=1
	else
		_program_configurationSet_bishbosh_proxyKind=0
	fi
	
	if core_variable_isSet bishbosh_proxyServer; then
		_program_configurationSet_bishbosh_proxyServer=1
	else
		_program_configurationSet_bishbosh_proxyServer=0
	fi
	
	if core_variable_isSet bishbosh_proxyPort; then
		_program_configurationSet_bishbosh_proxyPort=1
	else
		_program_configurationSet_bishbosh_proxyPort=0
	fi
	
	if core_variable_isSet bishbosh_proxyUsername; then
		_program_configurationSet_bishbosh_proxyUsername=1
	else
		_program_configurationSet_bishbosh_proxyUsername=0
	fi
	
	if core_variable_isSet bishbosh_proxyPassword; then
		_program_configurationSet_bishbosh_proxyPassword=1
	else
		_program_configurationSet_bishbosh_proxyPassword=0
	fi
}

_program_commandLine_helpMessage()
{
	_program_commandLine_helpMessage_usage="[OPTION]..."
	_program_commandLine_helpMessage_description="Connects to MQTT servers."
	_program_commandLine_helpMessage_options="
  -b, --backends A,B,...    Backend types A,B,... to talk to MQTT server.
                            Ordered in preference order. First found used.
                            Comma separated.
                            Defaults to '${_program_default_backends}'.
  -s, --server HOST         Server hostname, HOST, Unix domain socket path,
                            IPv4 or IPv6 address.
                            Unix domain socket paths must contain a '/' (ie
                            they can not be in the present working directory).
  -p, --port PORT           Server PORT. Ignored for Unix domain sockets.
                            Use 'BACKEND' to let the backend choose.
                            Defaults to 1883 or 8883 depending on backend
  -c, --clients-path PATH   PATH to folder containing Client Ids.
                            Contains a transmit folder, etc.
                            Defaults to '${_program_default_clientsPath}'.
      --transport TRANSPT   TRANSPT of inet, inet4, inet6 or unix.
	                        Defaults to 'inet'
      --source-address S    Bind to network interface with address S.
	                        Should not normally be needed.
							Turn off with ''.
							Off by default.
                            Does not work with transport 'unix'.
      --source-port PORT    Send packets from port PORT.
	                        Should not normally be needed.
							Turn off with ''.
							Off by default.
                            Does not work with transport 'unix'.
      --proxy-kind KIND     Use a particular KIND of proxy.
                            KIND is 'SOCKS4','SOCKS5','HTTP' or 'none'.
	                        Turn off with 'none'.
							Off by default.
                            Does not work with transport 'unix'.
                            Not all backends support this option.
      --proxy-server HOST   Connect to a proxy on a given HOST.
	                        Turn off with ''.
							Off by default.
                            Does not work with transport 'unix'.
      --proxy-port PORT     Connect to a proxy on a given PORT.
	                        Turn off with ''.
							Off by default, but defaults to 1080
							for SOCKS4 / SOCKS5 and 3128 for HTTP.
                            Does not work with transport 'unix'.
      --proxy-username UN   Connect to a proxy using username UN.
	                        Turn off with ''.
							Off by default.
                            Does not work with transport 'unix'.
                            Insecure - use configuration instead.
                            Not all proxies support this option.
      --proxy-password PWD  Connect to a proxy using password PWD.
	                        Turn off with ''.
							Off by default.
                            Does not work with transport 'unix'.
                            Insecure - use configuration instead.
                            Not all proxies support this option."
    _program_commandLine_helpMessage_optionsSpacing='   '
	_program_commandLine_helpMessage_configurationKeys="
  bishbosh_backends       Equivalent to --backends
  bishbosh_server         Equivalent to --server
  bishbosh_port           Equivalent to --port
  bishbosh_clientsPath   Equivalent to --clients-path
  bishbosh_transport      Equivalent to --transport
  bishbosh_sourceAddress  Equivalent to --source-address
  bishbosh_sourcePort     Equivalent to --source-port
  bishbosh_proxyKind      Equivalent to --proxy-kind
  bishbosh_proxyServer    Equivalent to --proxy-server
  bishbosh_proxyPort      Equivalent to --proxy-port
  bishbosh_proxyUsername  Equivalent to --proxy-username
  bishbosh_proxyPassword  Equivalent to --proxy-password
"
	_program_commandLine_helpMessage_examples="
  ${_program_name} --server localhost --backends ncMacOSX,bash
"
}

_program_commandLine_optionExists()
{
	case "$optionName" in
		
		b|backends)
			echo 'yes-argumented'
		;;
		
		s|server)
			echo 'yes-argumented'
		;;
		
		p|port)
			echo 'yes-argumented'
		;;
		
		c|clients-path)
			echo 'yes-argumented'
		;;
		
		transport)
			echo 'yes-argumented'
		;;
		
		source-address)
			echo 'yes-argumented'
		;;
		
		source-port)
			echo 'yes-argumented'
		;;
		
		proxy-kind)
			echo 'yes-argumented'
		;;
		
		proxy-server)
			echo 'yes-argumented'
		;;
		
		proxy-port)
			echo 'yes-argumented'
		;;
		
		proxy-username)
			echo 'yes-argumented'
		;;
		
		proxy-password)
			echo 'yes-argumented'
		;;
		
		*)
			echo 'no'
		;;
		
	esac
}

_program_commandLine_processOptionWithoutArgument()
{
	:
}

_program_commandLine_processOptionWithArgument()
{
	case "$optionName" in
		
		b|backends)
			bishbosh_validate_backends $core_commandLine_exitCode_USAGE 'option' "$optionNameIncludingHyphens" "$optionValue"
			bishbosh_backends="$optionValue"
		;;
		
		s|server)
			bishbosh_validate_address $core_commandLine_exitCode_USAGE 'option' "$optionNameIncludingHyphens" "$optionValue"
			bishbosh_server="$optionValue"
		;;
		
		p|port)
			core_validate_nonDynamicPort $core_commandLine_exitCode_USAGE 'option' "$optionNameIncludingHyphens" "$optionValue"
			bishbosh_port="$optionValue"
		;;
		
		c|clients-path)
			core_validate_folderPathReadableAndSearchableAndWritable $core_commandLine_exitCode_USAGE 'option' "$optionNameIncludingHyphens" "$optionValue"
			bishbosh_clientsPath="$optionValue"
		;;
		
		transport)
			bishbosh_validate_transport $core_commandLine_exitCode_USAGE 'option' "$optionNameIncludingHyphens" "$optionValue"
			bishbosh_transport="$optionValue"
		;;
		
		source-address)
			bishbosh_validate_address $core_commandLine_exitCode_USAGE 'option' "$optionNameIncludingHyphens" "$optionValue"
			bishbosh_sourceAddress="$optionValue"
		;;
		
		source-port)
			core_validate_nonDynamicPort $core_commandLine_exitCode_USAGE 'option' "$optionNameIncludingHyphens" "$optionValue"
			bishbosh_sourcePort="$optionValue"
		;;
		
		proxy-kind)
			bishbosh_validate_proxyKind $core_commandLine_exitCode_USAGE 'option' "$optionNameIncludingHyphens" "$optionValue"
			bishbosh_proxyKind="$optionValue"
			_program_configurationSet_bishbosh_proxyKind=0
		;;
		
		proxy-server)
			bishbosh_validate_address $core_commandLine_exitCode_USAGE 'option' "$optionNameIncludingHyphens" "$optionValue"
			bishbosh_proxyServer="$optionValue"
			_program_configurationSet_bishbosh_proxyServer=0
		;;
		
		proxy-port)
			core_validate_nonDynamicPort $core_commandLine_exitCode_USAGE 'option' "$optionNameIncludingHyphens" "$optionValue"
			bishbosh_proxyPort="$optionValue"
			_program_configurationSet_bishbosh_proxyPort=0
		;;
		
		proxy-username)
			core_message WARN "Specifying the option '--proxy-username' on the command line is insecure"
			bishbosh_proxyUsername="$optionValue"
			_program_configurationSet_bishbosh_proxyUsername=0
		;;
		
		proxy-password)
			core_message WARN "Specifying the option '--proxy-password' on the command line is insecure"
			bishbosh_proxyPassword="$optionValue"
			_program_configurationSet_bishbosh_proxyPassword=0
		;;
		
		*)
			echo 'no'
		;;
		
	esac
}

_program_commandLine_handleNonOptions()
{
	if [ $# -ne 0 ]; then
		core_commandLine_exitBadCommandLine "Non-options are not supported"
	fi
}

_program_commandLine_validateTransportSetting()
{
	local variableName="$1"
	local optionName="$2"
	local description="$3"
	local configurationSet=$4
	
	local code
	local category
	local name
	if core_variable_isSet "$variableName"; then
		local core_variable_indirectValue_result
		core_variable_indirectValue "$variableName"
		
		if [ $_program_configurationSet_bishbosh_transport -eq 1 ]; then
			if [ $configurationSet -eq 1 ]; then
				code=$core_commandLine_exitCode_CONFIG
				category='configuration setting'
				name="$variableName"
			else
				code=$core_commandLine_exitCode_USAGE
				category='option'
				name='--source-address'
			fi
			core_exitError $code "The $category '$name' specified a $description ('$core_variable_indirectValue_result') but the transport ($categoryTransport '$nameTransport') is '$bishbosh_transport'"
		fi
	fi
}

_program_commandLine_validateProxySetting()
{
	local noneOrUnspecified="$1"
	local variableName="$2"
	local optionName="$3"
	local description="$4"
	local configurationSet=$5
	
	local code
	local category
	local name
	local message
	
	if core_variable_isSet "$variableName"; then
		local core_variable_indirectValue_result
		core_variable_indirectValue "$variableName"
		
		if [ $configurationSet -eq 1 ]; then
			code=$core_commandLine_exitCode_CONFIG
			category='configuration setting'
			name="$variableName"
		else
			code=$core_commandLine_exitCode_USAGE
			category='option'
			name="$optionName"
		fi
		
		if [ $_program_configurationSet_bishbosh_proxyKind -eq 1 ]; then
			categoryProxyKind='configuration setting'
			nameProxyKind='bishbosh_proxyKind'
		else
			categoryProxyKind='option'
			nameProxyKind='--proxy-kind'
		fi
		
		message="The $category '$name' specifies a $description ('$core_variable_indirectValue_result') but the proxy kind ($categoryProxyKind '$nameProxyKind') is $noneOrUnspecified"
		if [ "$noneOrUnspecified" = "unspecified" ]; then
			core_exitError $code "$message"
		else
			core_message WARN "$message"
		fi
	fi
}

# TODO: There is no current way of overriding username / password (setting to blank is not the same as no password or no username)
# TODO: Need a secure way to receive password in separate configuration - --proxy-password-file
# TODO: https://stackoverflow.com/questions/53497/regular-expression-that-matches-valid-inet6-addresses
_program_commandLine_validate()
{
	local categoryProxyKind
	local nameProxyKind
	if [ $_program_configurationSet_bishbosh_proxyKind -eq 1 ]; then
		categoryProxyKind='configuration setting'
		nameProxyKind='bishbosh_proxyKind'
	else
		categoryProxyKind='option'
		nameProxyKind='--proxy-kind'
	fi
	
	local codeTransport
	local categoryTransport
	local nameTransport
	if [ $_program_configurationSet_bishbosh_transport -eq 1 ]; then
		codeTransport=$core_commandLine_exitCode_CONFIG
		categoryTransport='configuration setting'
		nameTransport='bishbosh_transport'
	else
		codeTransport=$core_commandLine_exitCode_USAGE
		categoryTransport='option'
		nameTransport='--transport'
	fi
	
	local codeServer
	local categoryServer
	local nameServer
	if [ $_program_configurationSet_bishbosh_server -eq 1 ]; then
		codeServer=$core_commandLine_exitCode_CONFIG
		categoryServer='configuration setting'
		nameServer='bishbosh_server'
	else
		codeServer=$core_commandLine_exitCode_USAGE
		categoryServer='option'
		nameServer='--server'
	fi
	
	if core_variable_isUnset bishbosh_backends; then
		bishbosh_backends="$_program_default_backends"
	else
		bishbosh_validate_backends $core_commandLine_exitCode_CONFIG 'configuration setting' 'bishbosh_backends' "$bishbosh_backends"
	fi
	
	if core_variable_isUnset bishbosh_server; then
		core_exitError $core_commandLine_exitCode_USAGE "The option '--server' must be specified"
	fi
	
	if core_variable_isUnset bishbosh_clientsPath; then
		bishbosh_clientsPath="$_program_default_clientsPath"
		core_validate_folderPathReadableAndSearchableAndWritable $core_commandLine_exitCode_CONFIG 'defaulted value for' '--clients-path' "$bishbosh_clientsPath"
	else
		core_validate_folderPathReadableAndSearchable $core_commandLine_exitCode_CONFIG 'configuration setting' 'bishbosh_clientsPath' "$bishbosh_clientsPath"
	fi
	
	if core_variable_isUnset bishbosh_transport; then
		bishbosh_transport=inet
	else
		bishbosh_validate_transport $core_commandLine_exitCode_CONFIG 'configuration setting' 'bishbosh_transport' "$bishbosh_transport"
		if [ "$bishbosh_transport" = unix ]; then
			if [ ! core_validate_socketPathReadableAndWritable "$bishbosh_server" ]; then
				core_exitError $codeServer "When $categoryTransport '$nameTransport' is 'unix' the $categoryServer '$nameServer' must be a path to a readable, writable domain socket ('$bishbosh_socket' is not)"
			fi
			_program_commandLine_validateTransportSetting bishbosh_sourceAddress '--source-address' 'source address' $_program_configurationSet_bishbosh_sourceAddress
			_program_commandLine_validateTransportSetting bishbosh_sourcePort '--source-port' 'source port' $_program_configurationSet_bishbosh_sourcePort
			_program_commandLine_validateTransportSetting bishbosh_port '-p/--port' 'destination port' $_program_configurationSet_bishbosh_port
		fi
	fi
	
	if core_variable_isSet bishbosh_proxyKind; then
		bishbosh_validate_proxyKind $core_commandLine_exitCode_CONFIG 'configuration setting' 'bishbosh_proxyKind' "$bishbosh_proxyKind"
		
		if [ "$bishbosh_proxyKind" = 'none' ]; then
			_program_commandLine_validateProxySetting "'none'" bishbosh_proxyServer '--proxy-server' 'proxy server' $_program_configurationSet_bishbosh_proxyServer
			_program_commandLine_validateProxySetting "'none'" bishbosh_proxyPort '--proxy-port' 'proxy port' $_program_configurationSet_bishbosh_proxyPort
			_program_commandLine_validateProxySetting "'none'" bishbosh_proxyUsername '--proxy-username' 'proxy username' $_program_configurationSet_bishbosh_proxyUsername
			_program_commandLine_validateProxySetting "'none'" bishbosh_proxyPassword '--proxy-password' 'proxy password' $_program_configurationSet_bishbosh_proxyPassword
		else
			_program_commandLine_validateTransportSetting bishbosh_proxyKind '--proxy-kind' 'proxy kind' $_program_configurationSet_bishbosh_proxyKind
			if core_variable_isUnset bishbosh_proxyServer; then
				core_commandLine_exitBadCommandLine "The proxy kind ($categoryProxyKind '$nameProxyKind') is '$bishbosh_proxyKind' but the option '--proxy-server' is unspecified"
			fi
			if core_variable_isUnset bishbosh_proxyPort; then
				case "$bishbosh_proxyKind" in
					SOCKS4|SOCKS5)
						bishbosh_proxyPort=1080
					;;
					
					HTTP)
						bishbosh_proxyPort=3128
					;;
				esac
			else
				core_validate_nonDynamicPort $core_commandLine_exitCode_USAGE 'configuration setting' 'bishbosh_proxyPort' "$bishbosh_proxyPort"
			fi
		fi
	else
		_program_commandLine_validateProxySetting 'unspecified' bishbosh_proxyServer '--proxy-server' 'proxy server' $_program_configurationSet_bishbosh_proxyServer
		_program_commandLine_validateProxySetting 'unspecified' bishbosh_proxyPort '--proxy-port' 'proxy port' $_program_configurationSet_bishbosh_proxyPort
		_program_commandLine_validateProxySetting 'unspecified' bishbosh_proxyUsername '--proxy-username' 'proxy username' $_program_configurationSet_bishbosh_proxyUsername
		_program_commandLine_validateProxySetting 'unspecified' bishbosh_proxyPassword '--proxy-password' 'proxy password' $_program_configurationSet_bishbosh_proxyPassword
		bishbosh_proxyKind='none'
	fi
}

# Assumes pwd, and so requires this code to be running from this folder
. "$_program_libPath"/shellfire/core/init.functions "$@"
