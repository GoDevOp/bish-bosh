core_usesIn bishbosh/backend gnutls openssl socat ncat nc6 nc ncBusyBox ncDebianOpenBSD ncDebianTraditional ncGNU ncMacOSX ncToybox devtcp cryptcat

bishbosh_backend_find()
{
	local originalIFS="$IFS"
	local IFS=','
	set -- $bishbosh_backends
	local IFS="$originalIFS"
	
	local backendName
	for backendName in $@
	do
		if bishbosh_backend_${backendName}_check; then
			bishbosh_backend_name="$backendName"
			if core_variable_isUnset bishbosh_port; then
				bishbosh_port=$(bishbosh_backend_${backendName}_port)
			fi
			core_message INFO "Using backend '$bishbosh_backend_name' on path '$bishbosh_backend_path' with port '$bishbosh_port'"
			return 0
		fi
	done
	
	core_exitError $core_commandLine_exitCode_OSFILE "Could not find a backend to make socket connections with tunnelling '$bishbosh_tunnel' that was on the PATH '$PATH'."
}

core_dependency_requires '*' grep
core_dependency_requires '*' head
bishbosh_backend_netcatVariantHelpMessageLineExists()
{
	local pattern="$1"

	# can be replaced with [ $("$binary" -h 2>&1 | sed -n '/^\[v1\.10/=') -eq 1 ]
	# but toybox doesn't have sed yet
	if "$binary" -h 2>&1 | head -n 1 | grep -q -E "$pattern"; then
		bishbosh_backend_path="$binary"
		return 0
	fi
	return 1
}

bishbosh_backend_debugOptions()
{
	core_message DEBUG "Passing options to backend '$bishbosh_backend_name' using '$bishbosh_backend_path' as '$(core_variable_array_passToFunctionAsArguments options echo)' (please note spaces ARE handled correctly)"
}
