core_usesIn core functions
core_functions_register _bishbosh_backend_registration ncDebianOpenBSD

# Not installed by default on Ubuntu/Debian (the version by Hobbit, last updated 2004 on freecode, now points to GNU netcat)
bishbosh_backend_ncDebianOpenBSD_check()
{
	if [ "$bishbosh_tunnel" != 'none' ]; then
		return 1
	fi
	
	if core_compatibility_whichNoOutput nc.openbsd; then
		bishbosh_backend_name=ncDebianOpenBSD
		bishbosh_backend_path="$(core_compatibility_which nc.openbsd)"
		return 0
	fi
	return 1
}

# was '^OpenBSD netcat \(Debian '
# Ported from OpenBSD to Debian, FreeBSD, Cygwin, Solaris
core_dependency_requires '*' grep
core_dependency_requires '*' head
bishbosh_backend_ncDebianOpenBSD_checkIfNetcatVariant()
{
	# eg  'OpenBSD netcat (Debian patchlevel 1.105-7ubuntu1)'
	if "$binary" -h 2>&1 | head -n 1 | grep -q -E '^OpenBSD netcat '; then
		bishbosh_backend_name=ncDebianOpenBSD
		bishbosh_backend_path="$binary"
		return 0
	fi
	return 1
}

bishbosh_backend_ncDebianOpenBSD_port()
{
	printf '%s' 1883
}

_bishbosh_backend_ncDebianOpenBSD_start_addProxy()
{
	local proxyValue="$1"
	core_variable_array_append options '-X' "$proxyValue"
	
	local proxyAddress="$bishbosh_proxyAddress"
	if core_variable_isSet bishbosh_proxyPort; then
		# Note, if using an IPv6 address, we'll need surrounding []
		proxyAddress="${proxyAddress}:${bishbosh_proxyPort}"
	fi
	
	core_variable_array_append options '-x' "$proxyAddress"
	
	if core_variable_isSet bishbosh_proxyUsername; then
		if [ "$proxyValue" = 'connect' ]; then
			core_variable_array_append options -P "$bishbosh_proxyUsername"
		else
			core_message WARN "The backend ncDebianOpenBSD does not support specifing the proxy username for proxy kinds other than 'HTTP'"
		fi
	fi
	
	if core_variable_isSet bishbosh_proxyPassword; then
		core_message WARN "The backend ncDebianOpenBSD does not support specifing the proxy password"
	fi
}

core_usesIn core variable variable/array
bishbosh_backend_ncDebianOpenBSD_start()
{
	local options
	local options_initialised
	core_variable_array_initialise options
	
	case "$bishbosh_transport" in
		
		inet)
			:
		;;
		
		inet4)
			core_variable_array_append options '-4'
		;;
		
		inet6)
			core_variable_array_append options '-6'
		;;
		
		unix)
			core_variable_array_append options '-U'
		;;
		
		serial)
			core_exitError $core_commandLine_exitCode_CONFIG "The backend ncDebianOpenBSD does not support the 'serial' transport."
		;;
		
		*)
			core_exitError $core_commandLine_exitCode_SOFTWARE "Please validate the values for bishbosh_transport ('$bishbosh_transport')"
		;;
		
	esac
	
	if core_variable_isSet bishbosh_sourceAddress; then
		core_variable_array_append options '-s' "$bishbosh_sourceAddress"
	fi
	
	if core_variable_isSet bishbosh_sourcePort; then
		core_variable_array_append options '-p' "$bishbosh_sourcePort"
	fi
	
	case "$bishbosh_proxyKind" in
		
		SOCKS4)
			_bishbosh_backend_ncDebianOpenBSD_start_addProxy '4'
		;;
		
		SOCKS4a)
			core_exitError $core_commandLine_exitCode_CONFIG "The backend ncDebianOpenBSD does not support the 'SOCKS4a' bishbosh_proxyKind."
		;;
		
		SOCKS5)
			_bishbosh_backend_ncDebianOpenBSD_start_addProxy '5'
		;;
		
		HTTP)
			_bishbosh_backend_ncDebianOpenBSD_start_addProxy 'connect'
		;;
		
	esac
	
	if [ $bishbosh_connectTimeout -ne 0 ]; then
		core_variable_array_append options -w $bishbosh_connectTimeout
	fi
	
	case $(core_init_verbosity) in
		
		0)
			:
		;;
		
		1)
			core_variable_array_append options -v
		;;
		
		*)
			core_variable_array_append options -v -v
		;;
	esac

	core_variable_array_append options "$bishbosh_server"
		
	core_variable_array_append options "$bishbosh_port"
	
	bishbosh_backend_debugOptions
	
	# Problem: nc listens for SIGINT (even if we do trap '' INT), and so we can't stop Ctrl-C killing it before we've written a disconnect
	core_variable_array_passToFunctionAsArguments options "$bishbosh_backend_path" <"$bishbosh_connection_toServerFifo" >"$bishbosh_connection_fromServerFifo" &
}
