_bishbosh_connection_write_CONNECT_validateArguments()
{
	# TODO: May be change from exit to return in core_exitError?
	if core_variable_isUnset bishbosh_connection_write_CONNECT_cleanSession; then
		cleanSession=0
	else
		core_validate_isBoolean $core_commandLine_exitCode_CONFIG 'argument' bishbosh_connection_write_CONNECT_cleanSession "$bishbosh_connection_write_CONNECT_cleanSession"
		if core_variable_isTrue "$bishbosh_connection_write_CONNECT_cleanSession"; then
			cleanSession=1
			connectFlags=$(( connectFlags + 1 << 1 ))
		else
			cleanSession=0
		fi
	fi
		
	if core_variable_isUnset bishbosh_connection_write_CONNECT_willTopic; then
		if core_variable_isSet bishbosh_connection_write_CONNECT_willMessage; then
			core_exitError $core_commandLine_exitCode_CONFIG "The argument 'bishbosh_connection_write_CONNECT_willMessage' can not be set when 'bishbosh_connection_write_CONNECT_willTopic' is unset"
		fi
		if core_variable_isSet bishbosh_connection_write_CONNECT_willQos; then
			core_exitError $core_commandLine_exitCode_CONFIG "The argument 'bishbosh_connection_write_CONNECT_willQos' can not be set when 'bishbosh_connection_write_CONNECT_willTopic' is unset"
		fi
		if core_variable_isSet bishbosh_connection_write_CONNECT_willRetain; then
			core_exitError $core_commandLine_exitCode_CONFIG "The argument 'bishbosh_connection_write_CONNECT_willRetain' can not be set when 'bishbosh_connection_write_CONNECT_willTopic' is unset"
		fi
		willTopic=''
		willTopic_fieldLength=-1
		willMessage=''
		willMessage_fieldLength=-1
	else
		# Will Flag
		connectFlags=$(( connectFlags + 1 << 2 ))
		
		# Will Topic
		willTopic="$bishbosh_connection_write_CONNECT_willTopic"
		bishbosh_connection_write_validateTopicName bishbosh_connection_write_CONNECT_willTopic "$willTopic"
		willTopic_fieldLength=${#willTopic}
		remainingLength=$(( remainingLength + 2 + willTopic_fieldLength ))
		
		# Will Message
		if core_variable_isUnset bishbosh_connection_write_CONNECT_willMessage; then
			core_exitError $core_commandLine_exitCode_CONFIG "The argument 'bishbosh_connection_write_CONNECT_willMessage' must be set when 'bishbosh_connection_write_CONNECT_willTopic' is set"
		fi
		willMessage="$bishbosh_connection_write_CONNECT_willMessage"
		bishbosh_connection_write_fieldLengthCheck CONNECT willMessage
		willTopic_fieldLength=${#willMessage}
		remainingLength=$(( remainingLength + 2 + willMessage_fieldLength ))
		
		# Will QoS
		if core_variable_isUnset bishbosh_connection_write_CONNECT_willQoS; then
			willQoS=0
		else
			core_validate_isUnsignedInteger $core_commandLine_exitCode_CONFIG 'argument' bishbosh_connection_write_CONNECT_willQoS "$bishbosh_connection_write_CONNECT_willQoS"
			if [ $bishbosh_connection_write_CONNECT_willQoS -gt 2 ]; then
				core_exitError $core_commandLine_exitCode_CONFIG "The argument 'bishbosh_connection_write_CONNECT_willQoS' must be between 0 and 2 inclusive"
			fi
			willQoS=$bishbosh_connection_write_CONNECT_willQoS
		fi
		connectFlags=$(( connectFlags + will_qos << 3 ))
		
		# Will Retain
		if core_variable_isSet bishbosh_connection_write_CONNECT_willRetain; then
			core_validate_isBoolean $core_commandLine_exitCode_CONFIG 'argument' bishbosh_connection_write_CONNECT_cleanSession "$bishbosh_connection_write_CONNECT_cleanSession"
			if core_variable_isTrue "$bishbosh_connection_write_CONNECT_cleanSession"; then
				connectFlags=$(( connectFlags + 1 << 5 ))
			fi
		fi
	fi
	
	if core_variable_isUnset bishbosh_connection_write_CONNECT_keepAlive; then
		keepAlive=0
	else
		core_validate_isUnsignedInteger $core_commandLine_exitCode_CONFIG 'argument' bishbosh_connection_write_CONNECT_keepAlive "$bishbosh_connection_write_CONNECT_keepAlive"
		if [ $bishbosh_connection_write_CONNECT_keepAlive -gt 65535 ]; then
			core_exitError $core_commandLine_exitCode_CONFIG "The argument 'bishbosh_connection_write_CONNECT_keepAlive' should be between 0 and 65535, not '$bishbosh_connection_write_CONNECT_keepAlive'"
		fi
		keepAlive=$bishbosh_connection_write_CONNECT_keepAlive
	fi
	
	if core_variable_isUnset bishbosh_connection_write_CONNECT_clientId; then
		# generate a random client-id
		if [ $cleanSession -eq 0 ]; then
			core_exitError $core_commandLine_exitCode_CONFIG "The argument 'bishbosh_connection_write_CONNECT_clientId' must be set if the argument 'bishbosh_connection_write_CONNECT_cleanSession' is true (yes)"
		fi
		clientId="$(core_random_characterForEncodingLettersAndNumbers)$(core_random_characterForEncodingLettersAndNumbers)$(core_random_characterForEncodingLettersAndNumbers)$(core_random_characterForEncodingLettersAndNumbers)$(core_random_characterForEncodingLettersAndNumbers)"
	elif [ -z "$bishbosh_connection_write_CONNECT_clientId" ]; then
		if [ $cleanSession -eq 0 ]; then
			core_exitError $core_commandLine_exitCode_CONFIG "The argument 'bishbosh_connection_write_CONNECT_clientId' can not be empty (blank) if the argument 'bishbosh_connection_write_CONNECT_cleanSession' is true (yes)"
		fi
		clientId=''
	else
		bishbosh_connection_write_validateUtf8 bishbosh_connection_write_CONNECT_clientId "$bishbosh_connection_write_CONNECT_clientId"
		clientId="$bishbosh_connection_write_CONNECT_clientId"
	fi
	clientId_fieldLength=${#clientId}
	bishbosh_connection_write_fieldLengthCheck CONNECT clientId
	remainingLength=$(( remainingLength + 2 + clientId_fieldLength ))

	if core_variable_isUnset bishbosh_connection_write_CONNECT_username; then
		username=''
		username_fieldLength=-1
	else
		bishbosh_connection_write_validateUtf8 bishbosh_connection_write_CONNECT_username "$bishbosh_connection_write_CONNECT_username"
		username="$bishbosh_connection_write_CONNECT_username"
		bishbosh_connection_write_fieldLengthCheck CONNECT username
		username_fieldLength=${#username}
		remainingLength=$(( remainingLength + 2 + username_fieldLength ))
		connectFlags=$(( connectFlags + 1 << 7 ))
	fi
	
	if core_variable_isUnset bishbosh_connection_write_CONNECT_password; then
		password=''
		password_fieldLength=-1
	else
		password="$bishbosh_connection_write_CONNECT_password"
		bishbosh_connection_write_fieldLengthCheck CONNECT password
		password_fieldLength=${#password}
		remainingLength=$(( remainingLength + 2 + password_fieldLength ))
		connectFlags=$(( connectFlags + 1 << 6 ))
	fi
}

core_usesIn bishbosh/connection write
bishbosh_connection_write_CONNECT()
{
	# 8 byte preamble and 2 byte keep-alive
	local remainingLength=10
	local connectFlags=0
	
	local cleanSession
	local willTopic
	local willTopic_fieldLength
	local willMessage
	local willMessage_fieldLength
	local willQoS
	local keepAlive
	local clientId
	local clientId_fieldLength
	local username
	local username_fieldLength
	local password
	local password_fieldLength
	_bishbosh_connection_write_CONNECT_validateArguments
	
	# CONNECT 1 << 4 in Octal (1 byte)
	printf '\020'
	
	# Remaining Length (1 - 3 bytes; 4 bytes would never be required)
	bishbosh_connection_write_remainingLength $remainingLength

	# protocol name (MSB, LSB, MQTT), protocol level (7 bytes)
	printf '\000\004MQTT\004'

	# connect flag (1 byte)
	bishbosh_connection_write_byte $connectFlags

	# two-byte size of Keep Alive (2 bytes)
	bishbosh_connection_write_twoByteLength $keepAlive

	# client id
	bishbosh_connection_write_twoByteLength $clientId_fieldLength
	printf '%s' "$clientId"

	# will topic & will message
	if [ $willTopic_fieldLength -ne -1 ]; then
		bishbosh_connection_write_twoByteLength $willTopic_fieldLength
		printf '%s' "$willTopic"
		bishbosh_connection_write_twoByteLength $willMessage_fieldLength
		printf '%s' "$willMessage"
	fi

	# username
	if [ $username_fieldLength -ne -1 ]; then
		bishbosh_connection_write_twoByteLength $username_fieldLength
		printf '%s' "$username"
	fi

	# password
	if [ $password_fieldLength -ne -1 ]; then
		bishbosh_connection_write_twoByteLength $password_fieldLength
		printf '%s' "$password"
	fi
}
