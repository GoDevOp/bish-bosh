_bishbosh_connection_write_CONNECT_validateArguments()
{
	if core_variable_isUnset bishbosh_connection_write_CONNECT_cleanSession; then
		cleanSession=0
	else
		core_validate_isBoolean $core_commandLine_exitCode_CONFIG 'argument' bishbosh_connection_write_CONNECT_cleanSession "$bishbosh_connection_write_CONNECT_cleanSession"
		if core_variable_isTrue "$bishbosh_connection_write_CONNECT_cleanSession"; then
			cleanSession=1
			connectFlags=$(( connectFlags + 1 << 1 ))
		else
			cleanSession=0
		fi
	fi
		
	if core_variable_isUnset bishbosh_connection_write_CONNECT_willTopic; then
		if core_variable_isSet bishbosh_connection_write_CONNECT_willMessage; then
			core_exitError $core_commandLine_exitCode_CONFIG "The argument 'bishbosh_connection_write_CONNECT_willMessage' can not be set when 'bishbosh_connection_write_CONNECT_willTopic' is unset"
		fi
		if core_variable_isSet bishbosh_connection_write_CONNECT_willMessageFilePath; then
			core_exitError $core_commandLine_exitCode_CONFIG "The argument 'bishbosh_connection_write_CONNECT_willMessageFilePath' can not be set when 'bishbosh_connection_write_CONNECT_willTopic' is unset"
		fi
		if core_variable_isSet bishbosh_connection_write_CONNECT_willQoS; then
			core_exitError $core_commandLine_exitCode_CONFIG "The argument 'bishbosh_connection_write_CONNECT_willQoS' can not be set when 'bishbosh_connection_write_CONNECT_willTopic' is unset"
		fi
		if core_variable_isSet bishbosh_connection_write_CONNECT_willRetain; then
			core_exitError $core_commandLine_exitCode_CONFIG "The argument 'bishbosh_connection_write_CONNECT_willRetain' can not be set when 'bishbosh_connection_write_CONNECT_willTopic' is unset"
		fi
		willTopic=''
		willTopicFieldLength=-1
		willMessage=''
		willMessageFieldLength=-1
	else
		# Will Flag
		connectFlags=$(( connectFlags + 1 << 2 ))
		
		# Will Topic
		willTopic="$bishbosh_connection_write_CONNECT_willTopic"
		bishbosh_connection_write_validateTopicName bishbosh_connection_write_CONNECT_willTopic "$willTopic"
		willTopicFieldLength=${#willTopic}
		remainingLength=$(( remainingLength + 2 + willTopicFieldLength ))
		
		# Will Message
		if core_variable_isUnset bishbosh_connection_write_CONNECT_willMessage; then
			if core_variable_isUnset bishbosh_connection_write_CONNECT_willMessageFilePath; then
				willMessage=''
				willMessageFieldLength=0
				willMessageFilePath=''
			else
				willMessage=''
				core_validate_filePathReadable $core_commandLine_exitCode_CONFIG 'argument' bishbosh_connection_write_CONNECT_willMessageFilePath "$bishbosh_connection_write_CONNECT_willMessageFilePath"
				willMessageFilePath="$bishbosh_connection_write_CONNECT_willMessageFilePath"
				willMessageFieldLength=$(bishbosh_filesize_${bishbosh_filesizeAlgorithm} "$willMessageFilePath")
				if [ $willMessageFieldLength -gt 65535 ]; then
					core_exitError $core_commandLine_exitCode_CONFIG "The size of the file pointed to be argument 'bishbosh_connection_write_CONNECT_willMessageFilePath' can not be longer than 65,535 bytes"
				fi
			fi
		else
			if core_variable_isSet bishbosh_connection_write_CONNECT_willMessageFilePath; then
				core_exitError $core_commandLine_exitCode_CONFIG "The arguments 'bishbosh_connection_write_CONNECT_willMessage' and 'bishbosh_connection_write_CONNECT_willMessageFilePath' can not both be specified"
			fi
			willMessage="$bishbosh_connection_write_CONNECT_willMessage"
			willMessageFieldLength=${#willMessage}
			if [ $willMessageFieldLength -gt 65535 ]; then
				core_exitError $core_commandLine_exitCode_CONFIG "The size of the argument 'bishbosh_connection_write_CONNECT_willMessage' can not be longer than 65,535 bytes"
			fi
		fi
		bishbosh_connection_validate_fieldLength CONNECT willMessage
		willMessageFieldLength=${#willMessage}
		remainingLength=$(( remainingLength + 2 + willMessageFieldLength ))
		
		# Will QoS
		if core_variable_isUnset bishbosh_connection_write_CONNECT_willQoS; then
			willQoS=0
		else
			core_validate_isUnsignedInteger $core_commandLine_exitCode_CONFIG 'argument' bishbosh_connection_write_CONNECT_willQoS "$bishbosh_connection_write_CONNECT_willQoS"
			if [ $bishbosh_connection_write_CONNECT_willQoS -gt 2 ]; then
				core_exitError $core_commandLine_exitCode_CONFIG "The argument 'bishbosh_connection_write_CONNECT_willQoS' must be between 0 and 2 inclusive"
			fi
			willQoS=$bishbosh_connection_write_CONNECT_willQoS
			connectFlags=$(( connectFlags + (willQoS << 3) ))
		fi
		
		# Will Retain
		if core_variable_isSet bishbosh_connection_write_CONNECT_willRetain; then
			core_validate_isBoolean $core_commandLine_exitCode_CONFIG 'argument' bishbosh_connection_write_CONNECT_willRetain "$bishbosh_connection_write_CONNECT_willRetain"
			if core_variable_isTrue "$bishbosh_connection_write_CONNECT_willRetain"; then
				connectFlags=$(( connectFlags + 1 << 5 ))
			fi
		fi
	fi
	
	if core_variable_isUnset bishbosh_connection_write_CONNECT_keepAlive; then
		bishbosh_connection_write_CONNECT_keepAlive=0
		keepAlive=0
	else
		bishbosh_validate_unsignedIntegerUpto65535Inclusive $core_commandLine_exitCode_CONFIG 'argument' bishbosh_connection_write_CONNECT_keepAlive "$bishbosh_connection_write_CONNECT_keepAlive"
		keepAlive=$bishbosh_connection_write_CONNECT_keepAlive
	fi
	
	if core_variable_isUnset bishbosh_clientId; then
		core_exitError $core_commandLine_exitCode_SOFTWARE "How is bishbosh_clientId unset?"
	elif [ -z "$bishbosh_clientId" ]; then
		if [ $cleanSession -eq 0 ]; then
			core_exitError $core_commandLine_exitCode_CONFIG "The argument 'bishbosh_clientId' can not be empty (blank) if the argument 'bishbosh_connection_write_CONNECT_cleanSession' is 0"
		fi
	else
		# bishbosh_connection_validate_clientId is called before we get to this point by bishbosh_connection_clientId_validateAndDefault
		clientId="$bishbosh_clientId"
	fi
	
	clientIdFieldLength=${#clientId}
	bishbosh_connection_validate_fieldLength CONNECT clientId
	remainingLength=$(( remainingLength + 2 + clientIdFieldLength ))

	if core_variable_isUnset bishbosh_connection_write_CONNECT_username; then
		username=''
		usernameFieldLength=-1
	else
		bishbosh_connection_validate_isUtf8 bishbosh_connection_write_CONNECT_username "$bishbosh_connection_write_CONNECT_username"
		username="$bishbosh_connection_write_CONNECT_username"
		bishbosh_connection_validate_fieldLength CONNECT username
		usernameFieldLength=${#username}
		remainingLength=$(( remainingLength + 2 + usernameFieldLength ))
		connectFlags=$(( connectFlags + 1 << 7 ))
	fi
	
	if core_variable_isUnset bishbosh_connection_write_CONNECT_password; then
		if core_variable_isUnset bishbosh_connection_write_CONNECT_passwordFilePath; then
			password=''
			passwordFieldLength=-1
			passwordFilePath=''
		else
			password=''
			core_validate_filePathReadable $core_commandLine_exitCode_CONFIG 'argument' bishbosh_connection_write_CONNECT_passwordFilePath "$bishbosh_connection_write_CONNECT_passwordFilePath"
			passwordFilePath="$bishbosh_connection_write_CONNECT_passwordFilePath"
			passwordFieldLength=$(bishbosh_filesize_${bishbosh_filesizeAlgorithm} "$passwordFilePath")
			if [ ${#passwordFieldLength} -gt 65535 ]; then
				core_exitError $core_commandLine_exitCode_CONFIG "The size of the file pointed to be argument 'bishbosh_connection_write_CONNECT_passwordFilePath' can not be longer than 65,535 bytes"
			fi
		fi
	else
		if core_variable_isSet bishbosh_connection_write_CONNECT_passwordFilePath; then
			core_exitError $core_commandLine_exitCode_CONFIG "The arguments 'bishbosh_connection_write_CONNECT_password' and 'bishbosh_connection_write_CONNECT_passwordFilePath' can not both be specified"
		fi
		password="$bishbosh_connection_write_CONNECT_password"
		bishbosh_connection_validate_fieldLength CONNECT password
		passwordFieldLength=${#password}
		remainingLength=$(( remainingLength + 2 + passwordFieldLength ))
		connectFlags=$(( connectFlags + 1 << 6 ))
	fi
}

core_usesIn bishbosh/connection write
core_dependency_requires '*' cat
bishbosh_connection_write_CONNECT()
{
	# 8 byte preamble and 2 byte keep-alive
	local remainingLength=10
	local connectFlags=0
	
	local cleanSession
	local willTopic
	local willTopicFieldLength
	local willMessage
	local willMessageFilePath
	local willMessageFieldLength
	local willQoS
	local keepAlive
	local clientId
	local clientIdFieldLength
	local username
	local usernameFieldLength
	local password
	local passwordFilePath
	local passwordFieldLength
	_bishbosh_connection_write_CONNECT_validateArguments
	
	# CONNECT 1 << 4 in Octal (1 byte)
	printf '\020'
	
	# Remaining Length (1 - 3 bytes; 4 bytes would never be required)
	bishbosh_connection_write_remainingLength $remainingLength

	# protocol name (MSB, LSB, MQTT), protocol level (7 bytes)
	printf '\000\004MQTT\004'

	# connect flag (1 byte)
	bishbosh_connection_write_byte $connectFlags

	# two-byte size of Keep Alive (2 bytes)
	bishbosh_connection_write_twoByteLength $keepAlive

	# client id
	bishbosh_connection_write_twoByteLength $clientIdFieldLength
	printf '%s' "$clientId"

	# will topic & will message
	if [ $willTopicFieldLength -ne -1 ]; then
		bishbosh_connection_write_twoByteLength $willTopicFieldLength
		printf '%s' "$willTopic"
		bishbosh_connection_write_twoByteLength $willMessageFieldLength
		if [ -z "$willMessageFilePath" ]; then
			printf '%s' "$willMessage"
		else
			bishbosh_connection_write_file "$willMessageFilePath" $willMessageFieldLength
		fi
	fi

	# username
	if [ $usernameFieldLength -ne -1 ]; then
		bishbosh_connection_write_twoByteLength $usernameFieldLength
		printf '%s' "$username"
	fi

	# password
	if [ $passwordFieldLength -ne -1 ]; then
		bishbosh_connection_write_twoByteLength $passwordFieldLength
		if [ -z "$passwordFilePath" ]; then
			printf '%s' "$password"
		else
			bishbosh_connection_write_file "$passwordFilePath" $passwordFieldLength
		fi
	fi
	
	bishbosh_connection_ping_recordLastSentControlPacketAt
}
