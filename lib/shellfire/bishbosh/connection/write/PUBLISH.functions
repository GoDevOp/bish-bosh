core_usesIn bishbosh/connection write

_bishbosh_connection_write_rePUBLISH_setRetainFlag()
{
	if [ -f "$alreadySentMessage".retain ]; then
		# RETAIN flag (1<<0)
		controlPacketTypeAndFlags=$(( controlPacketTypeAndFlags + 1 ))
	fi
}

_bishbosh_connection_write_PUBLISH_setRetainFlag()
{
	if core_variable_isSet bishbosh_connection_write_PUBLISH_retain; then
		if core_variable_isTrue bishbosh_connection_write_PUBLISH_retain; then
			bishbosh_connection_write_PUBLISH_retain=1
			# RETAIN flag (1<<0)
			controlPacketTypeAndFlags=$(( controlPacketTypeAndFlags + 1 ))
		else
			bishbosh_connection_write_PUBLISH_retain=0
		fi
	else
		bishbosh_connection_write_PUBLISH_retain=0
	fi
}

_bishbosh_connection_write_PUBLISH_setTopicName()
{
	if core_variable_isUnset bishbosh_connection_write_PUBLISH_topicName; then
		core_exitError $core_commandLine_exitCode_CONFIG "The argument 'bishbosh_connection_write_PUBLISH_topicName' must be specified"
	fi
	bishbosh_connection_validateTopicName bishbosh_connection_write_PUBLISH_topicName "$bishbosh_connection_write_PUBLISH_topicName"
	topicName="$bishbosh_connection_write_PUBLISH_topicName"
	
	topicNameFieldLength=${#topicName}
	remainingLength=$(( remainingLength + 2 + topicNameFieldLength ))
}

_bishbosh_connection_write_rePUBLISH_setTopicName()
{
	topicName="$(<"$alreadySentMessage".topic-name)"
		
	topicNameFieldLength=${#topicName}
	remainingLength=$(( remainingLength + 2 + topicNameFieldLength ))
}

_bishbosh_connection_write_PUBLISH_setMessage()
{
	if core_variable_isSet bishbosh_connection_write_PUBLISH_message; then
		
		if core_variable_isSet bishbosh_connection_write_PUBLISH_messageFilePath; then
			core_exitError $core_commandLine_exitCode_CONFIG "The argument 'bishbosh_connection_write_PUBLISH_messageFilePath' can not be specified if 'bishbosh_connection_write_PUBLISH_message' is"
		fi
		
		if core_variable_isSet bishbosh_connection_write_PUBLISH_messageUnlinkFile; then
			core_exitError $core_commandLine_exitCode_CONFIG "The argument 'bishbosh_connection_write_PUBLISH_messageUnlinkFile' can not be specified if 'bishbosh_connection_write_PUBLISH_message' is"
		fi

		bishbosh_connection_validate_fieldLength PUBLISH message
		
		message="$bishbosh_connection_write_PUBLISH_message"
		messageFieldLength=${#message}
		messageFilePath=''
		messageUnlinkFile=0
	
	elif core_variable_isSet bishbosh_connection_write_PUBLISH_messageFilePath; then
		
		if core_variable_isSet bishbosh_connection_write_PUBLISH_message; then
			core_exitError $core_commandLine_exitCode_CONFIG "The argument 'bishbosh_connection_write_PUBLISH_message' can not be specified if 'bishbosh_connection_write_PUBLISH_messageFilePath' is"
		fi

		core_validate_filePathReadable $core_commandLine_exitCode_CONFIG 'argument' bishbosh_connection_write_PUBLISH_messageFilePath "$bishbosh_connection_write_PUBLISH_messageFilePath"
		
		message=''
		messageFieldLength=$(bishbosh_filesize_${bishbosh_filesizeAlgorithm} "$bishbosh_connection_write_PUBLISH_messageFilePath")
		messageFilePath="$bishbosh_connection_write_PUBLISH_messageFilePath"
		
		if core_variable_isSet bishbosh_connection_write_PUBLISH_messageUnlinkFile; then
			if core_variable_isTrue bishbosh_connection_write_PUBLISH_messageUnlinkFile; then
				messageUnlinkFile=0
			else
				messageUnlinkFile=1
		else
			messageUnlinkFile=0
		fi
		
	else
		
		if core_variable_isSet bishbosh_connection_write_PUBLISH_messageUnlinkFile; then
			core_exitError $core_commandLine_exitCode_CONFIG "The argument 'bishbosh_connection_write_PUBLISH_messageUnlinkFile' can not be specified if 'bishbosh_connection_write_PUBLISH_messageFilePath' isn't"
		fi
		
		message=''
		messageFieldLength=0
		messageFilePath=''
		messageUnlinkFile=0
	fi
	
	local maximumLength=$((268435455-2-topicNameFieldLength))
	if [ $QoS -ne 0 ]; then
		maximumLength=$((maximumLength-2))
	fi
	if [ $messageFieldLength -gt $maximumLength ]; then
		core_exitError $core_commandLine_exitCode_CONFIG "The message can not be longer than $maximumLength bytes when topicName is $topicNameFieldLength bytes and QoS is $QoS."
	fi
	remainingLength=$(( remainingLength + messageFieldLength ))
}

_bishbosh_connection_write_rePUBLISH_setMessage()
{
	message=''
	messageFieldLength=$(bishbosh_filesize_${bishbosh_filesizeAlgorithm} "$bishbosh_connection_write_PUBLISH_messageFilePath")
	messageFilePath="$bishbosh_connection_write_PUBLISH_messageFilePath"
	messageUnlinkFile=0
}

_bishbosh_connection_write_PUBLISH_setQoS()
{	
	controlPacketTypeAndFlags=$(( controlPacketTypeAndFlags + (QoS << 2) ))
	remainingLength=$(( remainingLength + 2 ))
}

core_dependency_requires '*' mv ln
_bishbosh_connection_write_PUBLISH_recordForRepublish()
{
	if [ $bishbosh_connection_write_CONNECT_cleanSession -eq 0 ]; then
		if [ $bishbosh_connection_write_PUBLISH_retain ]; then
			printf '' >"$alreadySentMessage".retain
		fi

		printf '%s' "$topicName" >"$alreadySentMessage".topic-name
		
		if [ $messageUnlinkFile -eq 1 ]; then
			mv "$messageFilePath" "$alreadySentMessage".message
		elif [ -n "$messageFilePath" ]; then
			# hard links are better but may not work
			ln "$messageFilePath" "$alreadySentMessage".message || ln -s "$messageFilePath" "$alreadySentMessage".message
		else
			printf '%s' "$message" >"$alreadySentMessage".message
		fi
	else
		# Since cleanSession 1 is not recoverable, no other data matters
		printf '' >"$alreadySentMessage".message
	fi
}

_bishbosh_connection_write_PUBLISH_writeCommon()
{
	bishbosh_connection_write_byte "$controlPacketTypeAndFlags"
	bishbosh_connection_write_remainingLength $remainingLength
	bishbosh_connection_write_twoByteLength $topicNameFieldLength
	printf '%s' "$topicName"
}

_bishbosh_connection_write_PUBLISH_writePacketIdentifier()
{
	bishbosh_connection_write_twoByteLength $bishbosh_connection_write_packetIdentifier
}

core_dependency_requires '*' rm
_bishbosh_connection_write_PUBLISH_writeMessagePingAndUnlink()
{
	if [ -z "$messageFilePath" ]; then
		printf '%s' "$message"
	else
		bishbosh_connection_write_file "$messageFilePath" $messageFieldLength
	fi
	
	bishbosh_connection_ping_recordLastSentControlPacketAt
	
	if [ $messageUnlinkFile -eq 1 ]; then
		rm -f $messageUnlinkFile || true
	fi
}

# requires QoS, packetIdentifier
bishbosh_connection_write_rePUBLISH()
{
	core_message INFO "re-PUBLISH-ing packet identifier '$bishbosh_connection_write_packetIdentifier'"
	
	local bishbosh_connection_write_packetIdentifier=$packetIdentifier
	
	# 3 << 4
	local controlPacketTypeAndFlags=48
	local remainingLength=0
	local alreadySentMessage="$bishbosh_connection_sessionPublicationsPath"/$QoS/"$bishbosh_connection_write_packetIdentifier"
	
	_bishbosh_connection_write_rePUBLISH_setRetainFlag
	
	local topicName
	local topicNameFieldLength
	_bishbosh_connection_write_rePUBLISH_setTopicName
	
	local message
	local messageFieldLength
	local messageFilePath
	local messageUnlinkFile
	_bishbosh_connection_write_rePUBLISH_setMessage
	
	_bishbosh_connection_write_PUBLISH_setQoS
	
	_bishbosh_connection_write_PUBLISH_writeCommon
	
	_bishbosh_connection_write_PUBLISH_writePacketIdentifier
	
	_bishbosh_connection_write_PUBLISH_writeMessagePingAndUnlink
}

bishbosh_connection_write_PUBLISH_0()
{
	# 3 << 4
	local controlPacketTypeAndFlags=48
	local remainingLength=0
	local QoS=0
	
	_bishbosh_connection_write_PUBLISH_setRetainFlag
	
	local topicName
	local topicNameFieldLength
	_bishbosh_connection_write_PUBLISH_setTopicName
	
	local message
	local messageFieldLength
	local messageFilePath
	local messageUnlinkFile
	_bishbosh_connection_write_PUBLISH_setMessage
	
	_bishbosh_connection_write_PUBLISH_writeCommon
	
	_bishbosh_connection_write_PUBLISH_writeMessagePingAndUnlink
}

bishbosh_connection_write_PUBLISH_1()
{
	# 3 << 4
	local controlPacketTypeAndFlags=48
	local remainingLength=0
	local QoS=1
	
	_bishbosh_connection_write_PUBLISH_setRetainFlag
	
	local topicName
	local topicNameFieldLength
	_bishbosh_connection_write_PUBLISH_setTopicName
	
	local message
	local messageFieldLength
	local messageFilePath
	local messageUnlinkFile
	_bishbosh_connection_write_PUBLISH_setMessage
	
	_bishbosh_connection_write_PUBLISH_setQoS
	
	bishbosh_connection_write_nextPacketIdentifier
	local alreadySentMessage="$bishbosh_connection_sessionPublicationsPath"/$QoS/"$bishbosh_connection_write_packetIdentifier"
	
	_bishbosh_connection_write_PUBLISH_writeCommon
	
	_bishbosh_connection_write_PUBLISH_writePacketIdentifier
	
	_bishbosh_connection_write_PUBLISH_writeMessagePingAndUnlink
}

bishbosh_connection_write_PUBLISH_2()
{
	# 3 << 4
	local controlPacketTypeAndFlags=48
	local remainingLength=0
	local QoS=2
	
	_bishbosh_connection_write_PUBLISH_setRetainFlag
	
	local topicName
	local topicNameFieldLength
	_bishbosh_connection_write_PUBLISH_setTopicName
	
	local message
	local messageFieldLength
	local messageFilePath
	local messageUnlinkFile
	_bishbosh_connection_write_PUBLISH_setMessage
	
	_bishbosh_connection_write_PUBLISH_setQoS
	
	bishbosh_connection_write_nextPacketIdentifier
	local alreadySentMessage="$bishbosh_connection_sessionPublicationsPath"/$QoS/"$bishbosh_connection_write_packetIdentifier"
	
	_bishbosh_connection_write_PUBLISH_recordForRepublish
	
	_bishbosh_connection_write_PUBLISH_writeCommon
	
	_bishbosh_connection_write_PUBLISH_writePacketIdentifier
	
	_bishbosh_connection_write_PUBLISH_writeMessagePingAndUnlink
}
