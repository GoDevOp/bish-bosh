bishbosh_connection_validate_fieldLength()
{
	local packetName="$1"
	local variableName="$2"
	
	local core_variable_indirectValue_result
	core_variable_indirectValue "$variableName"
	if [ ${#core_variable_indirectValue_result} -gt 65535 ]; then
		core_exitError $core_commandLine_exitCode_CONFIG "The argument 'bishbosh_connection_write_${packetName}_${variableName}' can not be longer than 65,535 bytes"
	fi
}

_bishbosh_connection_validate_isUtf8WithIconv_iconv()
{
	iconv -c -s -f utf-8 -t utf-8 1>/dev/null <<-EOF
		$value
	EOF
}

_bishbosh_connection_validate_isUtf8WithIconv()
{
	if core_compatibility_whichNoOutput iconv; then
		if ! _bishbosh_connection_validate_isUtf8WithIconv_iconv; then
			core_exitError $core_commandLine_exitCode_CONFIG "The argument '$argument' is not valid UTF-8"
		fi
	fi
}

core_dependency_requires '*' tr
bishbosh_connection_validate_removeCharacters()
{
	local strip="$1"
	local value="$2"
	printf '%s' "$value" | tr -d "$strip"
}

core_dependency_oneOf '*' iconv
bishbosh_connection_validate_isUtf8()
{
	local argument="$1"
	local value="$2"
	
	_bishbosh_connection_validate_isUtf8WithIconv

	# Only relevant to zsh
	local strippedOfAsciiNul="$(bishbosh_connection_validate_removeCharacters '\000' "$value")"
	if [ ${#strippedOfAsciiNul} -ne ${#value} ]; then
		core_exitError $core_commandLine_exitCode_CONFIG "The argument '$argument' contains \u0000 (ASCII NUL)"
	fi
}

bishbosh_connection_validate_clientId()
{
	bishbosh_connection_validate_isUtf8 bishbosh_clientId "$bishbosh_clientId"

	if [ ${#bishbosh_clientId} -gt 254 ]; then
		core_exitError $core_commandLine_exitCode_CONFIG "The option -i,--client-id or configuration setting bishbosh_clientId '$bishbosh_clientId' is longer than 254 bytes. ${_program_name} can not support this."
	fi
	
	if [ ${#bishbosh_clientId} -gt 23 ]; then
		core_message WARN "Not all MQTT servers support a ClientId of more than 23 encoded bytes."
	fi
	
	local stripped="$(printf '%s' "$bishbosh_clientId" | tr -d -C '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')"
	if [ ${#stripped} -ne ${#bishbosh_clientId} ]; then
		core_message WARN "Not all MQTT servers support a ClientId with characters other than 0-9, a-z and A-Z."
	fi
}

bishbosh_connection_write_validateTopicName()
{
	local argument="$1"
	local value="$2"

	if [ ${#value} -eq 0 ]; then
		core_exitError $core_commandLine_exitCode_CONFIG "The argument '$argument' is empty; this is not permitted for topic names"
	fi
	
	_bishbosh_connection_validate_isUtf8WithIconv
	
	local strippedOfInvalidCharacters="$(bishbosh_connection_validate_removeCharacters '#*\000' "$value")"
	
	if [ ${#strippedOfInvalidCharacters} -ne ${#value} ]; then
		# Only relevant to zsh
		local strippedOfAsciiNul="$(bishbosh_connection_validate_removeCharacters '\000' "$value")"
	
		if [ ${#strippedOfAsciiNul} -ne ${#value} ]; then
			core_exitError $core_commandLine_exitCode_CONFIG "The argument '$argument' contains \u0000 (ASCII NUL)"
		fi
		core_exitError $core_commandLine_exitCode_CONFIG "The argument '$argument' ('$value') contains a wildcard ('#' or '+')"
	fi
}

core_dependency_requires '*' sed
_bishbosh_connection_validate_topicFilter_sed()
{
	sed -e 's;/+/;XXX;g' -e 's;^+/;XX;g' -e 's;/+$;XX;g' -e 's;/#$;XX;g' -e 's;#;;g' -e 's;+;;g' <<-EOF
		$value
	EOF
}

bishbosh_connection_validate_topicFilter()
{
	local argument="$1"
	local index=$2
	local value=$3
	
	argument="$argument' at pair index '$index"
	
	if [ ${#value} -eq 0 ]; then
		core_exitError $core_commandLine_exitCode_CONFIG "The argument '$argument' is empty; this is not permitted for topic filters"
	fi
	
	_bishbosh_connection_validate_isUtf8WithIconv
	
	local strippedTopicFilter="$(bishbosh_connection_validate_removeCharacters '\n\000' "$value")"
	if [ ${#strippedTopicFilter} -ne ${#value} ]; then

		local strippedOfAsciiNul="$(bishbosh_connection_validate_removeCharacters '\000' "$value")"
		if [ ${#strippedOfAsciiNul} -ne ${#argument} ]; then
			core_exitError $core_commandLine_exitCode_CONFIG "The argument '$argument' contains \u0000 (ASCII NUL)"
		fi
		
		core_exitError $core_commandLine_exitCode_CONFIG "The argument '$argument' has a topic filter containing \n (LF, Linefeed), which, although allowed in the MQTT 3.1.1 specification can not be supported in portable shell scripts or common tools (outside of those supplied by GNU)"
	fi
	
	local strippedOfWildcard="$(_bishbosh_connection_validate_topicFilter_sed)"
	
	if [ ${#strippedOfWildcard} -ne ${#topicFilter} ]; then
		core_exitError $core_commandLine_exitCode_CONFIG "The argument '$argument' ('$value') contains invalid wildcards"
	fi
}

bishbosh_connection_validate_packetIdentifier()
{
	local argument="$1"
	packetIdentifier="$2"
	core_validate_isUnsignedInteger $core_commandLine_exitCode_CONFIG 'argument' "$argument" "$packetIdentifier"
	if [ $packetIdentifier -eq 0 ]; then
		core_exitError $core_commandLine_exitCode_CONFIG "The argument '$argument' is a packet identifier and so can not be 0"
	fi
	if [ $packetIdentifier -gt 65535 ]; then
		core_exitError $core_commandLine_exitCode_CONFIG "The argument '$argument' is a packet identifier and so can not be greater than 65,535"
	fi
}
