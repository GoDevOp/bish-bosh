bishbosh_connection_read_PUBLISH_0()
{	
	local retain=0
	local qos=0
	local dup=0
	_bishbosh_connection_read_PUBLISH
}

bishbosh_connection_read_PUBLISH_1()
{
	local retain=1
	local qos=0
	local dup=0
	_bishbosh_connection_read_PUBLISH
}

bishbosh_connection_read_PUBLISH_2()
{
	local retain=0
	local qos=1
	local dup=0
	_bishbosh_connection_read_PUBLISH
}

bishbosh_connection_read_PUBLISH_3()
{
	local retain=1
	local qos=1
	local dup=0
	_bishbosh_connection_read_PUBLISH
}

bishbosh_connection_read_PUBLISH_4()
{
	local retain=0
	local qos=2
	local dup=0
	_bishbosh_connection_read_PUBLISH
}

bishbosh_connection_read_PUBLISH_5()
{
	local retain=1
	local qos=2
	local dup=0
	_bishbosh_connection_read_PUBLISH
}

bishbosh_connection_read_PUBLISH_10()
{
	local retain=0
	local qos=1
	local dup=1
	_bishbosh_connection_read_PUBLISH
}

bishbosh_connection_read_PUBLISH_11()
{
	local retain=1
	local qos=1
	local dup=1
	_bishbosh_connection_read_PUBLISH
}

bishbosh_connection_read_PUBLISH_12()
{
	local retain=0
	local qos=2
	local dup=1
	_bishbosh_connection_read_PUBLISH
}

bishbosh_connection_read_PUBLISH_13()
{
	local retain=1
	local qos=2
	local dup=1
	_bishbosh_connection_read_PUBLISH
}

_bishbosh_connection_read_PUBLISH()
{
	read topic name
	local length
	bishbosh_connection_read_length
	local topicLength=$length
	
	local topicName
	local remainingTopicLength=$messageLength
	local byte
	while [ $remainingTopicLength -ne 0 ]
	do
		bishbosh_connection_read_byte_blocking byte
		topicName="${topicName}$(bishbosh_connection_write_byte $byte)"
		remainingTopicLength=$((remainingTopicLength-1))
	done
	
	local packetIdentifier
	bishbosh_connection_read_packetIdentifier
	
	local messageLength=$((remainingLength-2-topicLength-2))
	
	# We really ought to dump the message to a file
	local messageFilePath="$bishbosh_connection_sessionReceivedMessagesPath"/$bishbosh_connection_nextReceivedMessageNumber
	bishbosh_connection_nextReceivedMessageNumber=$((bishbosh_connection_nextReceivedMessageNumber+1))
	
	local remainingMessageLength=$messageLength
	local byte
	while [ $remainingMessageLength -ne 0 ]
	do
		# Could we pipe stdin to dd and use a dirty converter?
		bishbosh_connection_read_byte_blocking byte
		bishbosh_connection_write_byte $byte
		remainingMessageLength=$((remainingMessageLength-1))
	done >"$messageFilePath"

	local pendingReceiveQos2PacketIdentifierPath="$bishbosh_connection_sessionPublicationsQos2PendingReceivePath"/"$packetIdentifier"
	if [ -f "$pendingReceiveQos2PacketIdentifierPath" ]; then
		# assume we have sent the PUBREC w/o PUBREL being received
		bishbosh_connection_handler_PUBLISH_again
	else
		bishbosh_connection_handler_PUBLISH
		if [ $qos -eq 2 ]; then
			touch "$pendingReceiveQos2PacketIdentifierPath"
		fi
	fi
	
	case $qos in
		
		1)
			bishbosh_connection_write_PUBACK_packetIdentifier=$packetIdentifier
			bishbosh_connection_write_PUBACK
		;;
		
		2)
			bishbosh_connection_write_PUBREC_packetIdentifier=$packetIdentifier
			bishbosh_connection_write_PUBREC
		;;
		
	esac
}
