core_usesIn bishbosh/connection/read controlpacket
core_usesIn bishbosh/connection/read/loop pipeStdbufOd forkHexdump forkOd

core_dependency_requires '*' grep
bishbosh_connection_read_initialise()
{
	local isServer="$1"
	
	bishbosh_connection_read_controlpacket_initialise "$isServer"
	
	local loopKind
	local initialiseFunction
	local exitCode
	set +e
		for initialiseFunction in \
			bishbosh_connection_read_loop_pipeStdbufOd_initialise \
			bishbosh_connection_read_loop_forkHexdump_initialise \
			bishbosh_connection_read_loop_forkOd_initialise
		do
			initialiseFunction=bishbosh_connection_read_loop_${loopKind}_initialise
			if $initialiseFunction; then
				bishbosh_connection_read_loop=bishbosh_connection_read_loop_${loopKind}
				bishbosh_connection_read_byte_blocking=_bishbosh_connection_read_byte_${loopKind}
				bishbosh_connection_read_byte_nonBlocking=_bishbosh_connection_read_byte_${loopKind}_nonBlocking
				return 0
			fi
		done
	set -e
	
	core_exitError "Can not find either hexdump or od on the path"
}

bishbosh_connection_read_expectingCONNACK()
{
	bishbosh_connection_read_firstTwoBytesOfControlPacket
	if [ $controlPacketByte -ne 32 ]; then
		bishbosh_connection_read_controlpacket_invalid
	fi
	bishbosh_connection_read_controlpacket_CONNACK
}

bishbosh_connection_read_firstTwoBytesOfControlPacket()
{
	$bishbosh_connection_read_byte_blocking controlPacketByte
	$bishbosh_connection_read_byte_blocking firstRemainingLengthByte
}

bishbosh_connection_read_protocolError()
{
	local controlPacket="$1"
	local message="$2"
	core_message WARN "Connection:$bishbosh_connection_id:read:$controlPacket:$message"
	return $core_commandLine_exitCode_PROTOCOL
}

bishbosh_connection_read_protocolErrorIfRemainingLengthNot()
{
	local controlPacket="$1"
	local expectedLength=$2
	if [ $firstRemainingLengthByte -ne $expectedLength ]; then
		bishbosh_connection_read_protocolError "$controlPacket" "Remaining length '$firstRemainingLengthByte' should be $expectedLength"
	fi
}

bishbosh_connection_read_protocolErrorIfRemainingLengthNotZero()
{
	bishbosh_connection_read_protocolErrorIfRemainingLengthNot "$1" 0
}
