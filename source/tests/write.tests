function _test_write_encodeRemainingLength()
{
	local -ir length=$1
	local -r message="$2"
	local -r expected="$3"
	
	temporaryFiles_newFileToRemoveOnExit
	local -r actualFile="$TMP_FILE"
	write_encodeRemainingLength $length >"$actualFile"

	temporaryFiles_newFileToRemoveOnExit
	local -r expectedFile="$TMP_FILE"
	
	if [ "$message" != "0x00" ]; then
		printf '%s' "$expected" >"$expectedFile"
	else
		printf '\000' >"$expectedFile"
	fi
	
	test_assertFilesEqual "Length $length should be encoded to $message" "$actualFile" "$expectedFile"
}

function test_write_encodeRemainingLength()
{
	_test_write_encodeRemainingLength 0 0x00 $'\x00'
	_test_write_encodeRemainingLength 1 0x01 $'\x01'
	_test_write_encodeRemainingLength 64 0x40 $'\x40'
	_test_write_encodeRemainingLength 127 0x7F $'\x7F'
	_test_write_encodeRemainingLength 128 0x8001 $'\x80'$'\x01'
	_test_write_encodeRemainingLength 321 0xC102 $'\xC1'$'\x02'
	_test_write_encodeRemainingLength 16383 0xFF7F $'\xFF'$'\x7F'
	#_test_write_encodeRemainingLength 16384 0x808001 $'\x80'$'\x80'$'\x01'
	#_test_write_encodeRemainingLength 2097151 0xFFFF7F $'\xFF'$'\xFF'$'\x7F'
	#_test_write_encodeRemainingLength 2097152 0x80808001 $'\x80'$'\x80'$'\x80'$'\x01'
	#_test_write_encodeRemainingLength 268435455 0xFFFFFF7F $'\xFF'$'\xFF'$'\xFF'$'\x7F'
}

source run-tests write
