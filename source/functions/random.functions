function random_generateBetween0To255()
{
	if which openssl 1>/dev/null 2>/dev/null; then
		local -ir fromHex=0x$(openssl rand -hex 1)
		echo -nE $fromHex
	if [ -r /dev/urandom ]; then
		dd if=/dev/urandom bs=1 count=1 2>/dev/null | od -t u1 | awk '{if (NR==1) {print $2}}'
		return 0
	elif [ -r /dev/random ]; then
		dd if=/dev/random bs=1 count=1 2>/dev/null | od -t u1 | awk '{if (NR==1) {print $2}}'
		return 0
	else
		echo -nE $(( RANDOM / 256 ))
	fi
}

function random_generateBetweenOAndModulus()
{
	local -ir modulus=$1
	local -ir randomNumber="$(random_generateBetween0To255)"
	echo -nE $(($randomNumber % $modulus))
}

function random_characterForEncodingLowerCaseOnly()
{
	local -ir number0To35=$(random_generateBetween0AndModulus 36)
	if [ $number0To35 -lt 26 ]; then
		local -ir subtract=0
		local -ir base=97
	else
		local -ir subtract=26
		local -ir base=48
	fi
	echo -nE $((number0To35 - subtract + base))
}

function random_characterForEncodingLettersAndNumbers()
{
	local -ir number0To61=$(random_generateBetween0AndModulus 62)
	if [ $number0To61 -lt 26 ]; then
		local -ir subtract=0
		local -ir base=65
	elif [ $number0To61 -lt 52 ]; then
		local -ir subtract=26
		local -ir base=97
	else
		local -ir subtract=52
		local -ir base=48
	fi
	echo -nE $((number0To61 - subtract + base))
}

function random_characterForEncodingBase64Like()
{
	local -ir number0To63=$(random_generateBetween0AndModulus 64)
	if [ $number0To63 -lt 26 ]; then
		local -ir subtract=0
		local -ir base=65
	elif [ $number0To63 -lt 52 ]; then
		local -ir subtract=26
		local -ir base=97
	elif [ $number0To63 -lt 62 ]; then
		local -ir subtract=52
		local -ir base=48
	elif [ $number0To63 -lt 63 ]; then
		local -ir subtract=62
		local -ir base=47
	else
		local -ir subtract=63
		local -ir base=43
	fi
	echo -nE $((number0To63 - subtract + base))
}
