write_byteCache=()
# bash subshell doesn't handle ASCII NULL, so we can't simply test for it
# bash command substitution does funky things to \x01, \xFF, so we use file comparisons instead
# bash can't read NULL
# bash can't echo or printf NULL (? can it print it - no)
# ASCII NULL string is converted to empty inside bash, so this is near useless, but it keeps the array length correct
write_byteCache[0]=$'\x00'
write_byteCache[1]=$'\x01'
write_byteCache[2]=$'\x02'
write_byteCache[3]=$'\x03'
write_byteCache[4]=$'\x04'
write_byteCache[5]=$'\x05'
write_byteCache[6]=$'\x06'
write_byteCache[7]=$'\x07'
write_byteCache[8]=$'\x08'
write_byteCache[9]=$'\x09'
write_byteCache[10]=$'\x0A'
write_byteCache[11]=$'\x0B'
write_byteCache[12]=$'\x0C'
write_byteCache[13]=$'\x0D'
write_byteCache[14]=$'\x0E'
write_byteCache[15]=$'\x0F'
write_byteCache[16]=$'\x10'
write_byteCache[17]=$'\x11'
write_byteCache[18]=$'\x12'
write_byteCache[19]=$'\x13'
write_byteCache[20]=$'\x14'
write_byteCache[21]=$'\x15'
write_byteCache[22]=$'\x16'
write_byteCache[23]=$'\x17'
write_byteCache[24]=$'\x18'
write_byteCache[25]=$'\x19'
write_byteCache[26]=$'\x1A'
write_byteCache[27]=$'\x1B'
write_byteCache[28]=$'\x1C'
write_byteCache[29]=$'\x1D'
write_byteCache[30]=$'\x1E'
write_byteCache[31]=$'\x1F'
write_byteCache[32]=$'\x20'
write_byteCache[33]=$'\x21'
write_byteCache[34]=$'\x22'
write_byteCache[35]=$'\x23'
write_byteCache[36]=$'\x24'
write_byteCache[37]=$'\x25'
write_byteCache[38]=$'\x26'
write_byteCache[39]=$'\x27'
write_byteCache[40]=$'\x28'
write_byteCache[41]=$'\x29'
write_byteCache[42]=$'\x2A'
write_byteCache[43]=$'\x2B'
write_byteCache[44]=$'\x2C'
write_byteCache[45]=$'\x2D'
write_byteCache[46]=$'\x2E'
write_byteCache[47]=$'\x2F'
write_byteCache[48]=$'\x30'
write_byteCache[49]=$'\x31'
write_byteCache[50]=$'\x32'
write_byteCache[51]=$'\x33'
write_byteCache[52]=$'\x34'
write_byteCache[53]=$'\x35'
write_byteCache[54]=$'\x36'
write_byteCache[55]=$'\x37'
write_byteCache[56]=$'\x38'
write_byteCache[57]=$'\x39'
write_byteCache[58]=$'\x3A'
write_byteCache[59]=$'\x3B'
write_byteCache[60]=$'\x3C'
write_byteCache[61]=$'\x3D'
write_byteCache[62]=$'\x3E'
write_byteCache[63]=$'\x3F'
write_byteCache[64]=$'\x40'
write_byteCache[65]=$'\x41'
write_byteCache[66]=$'\x42'
write_byteCache[67]=$'\x43'
write_byteCache[68]=$'\x44'
write_byteCache[69]=$'\x45'
write_byteCache[70]=$'\x46'
write_byteCache[71]=$'\x47'
write_byteCache[72]=$'\x48'
write_byteCache[73]=$'\x49'
write_byteCache[74]=$'\x4A'
write_byteCache[75]=$'\x4B'
write_byteCache[76]=$'\x4C'
write_byteCache[77]=$'\x4D'
write_byteCache[78]=$'\x4E'
write_byteCache[79]=$'\x4F'
write_byteCache[80]=$'\x50'
write_byteCache[81]=$'\x51'
write_byteCache[82]=$'\x52'
write_byteCache[83]=$'\x53'
write_byteCache[84]=$'\x54'
write_byteCache[85]=$'\x55'
write_byteCache[86]=$'\x56'
write_byteCache[87]=$'\x57'
write_byteCache[88]=$'\x58'
write_byteCache[89]=$'\x59'
write_byteCache[90]=$'\x5A'
write_byteCache[91]=$'\x5B'
write_byteCache[92]=$'\x5C'
write_byteCache[93]=$'\x5D'
write_byteCache[94]=$'\x5E'
write_byteCache[95]=$'\x5F'
write_byteCache[96]=$'\x60'
write_byteCache[97]=$'\x61'
write_byteCache[98]=$'\x62'
write_byteCache[99]=$'\x63'
write_byteCache[100]=$'\x64'
write_byteCache[101]=$'\x65'
write_byteCache[102]=$'\x66'
write_byteCache[103]=$'\x67'
write_byteCache[104]=$'\x68'
write_byteCache[105]=$'\x69'
write_byteCache[106]=$'\x6A'
write_byteCache[107]=$'\x6B'
write_byteCache[108]=$'\x6C'
write_byteCache[109]=$'\x6D'
write_byteCache[110]=$'\x6E'
write_byteCache[111]=$'\x6F'
write_byteCache[112]=$'\x70'
write_byteCache[113]=$'\x71'
write_byteCache[114]=$'\x72'
write_byteCache[115]=$'\x73'
write_byteCache[116]=$'\x74'
write_byteCache[117]=$'\x75'
write_byteCache[118]=$'\x76'
write_byteCache[119]=$'\x77'
write_byteCache[120]=$'\x78'
write_byteCache[121]=$'\x79'
write_byteCache[122]=$'\x7A'
write_byteCache[123]=$'\x7B'
write_byteCache[124]=$'\x7C'
write_byteCache[125]=$'\x7D'
write_byteCache[126]=$'\x7E'
write_byteCache[127]=$'\x7F'
write_byteCache[128]=$'\x80'
write_byteCache[129]=$'\x81'
write_byteCache[130]=$'\x82'
write_byteCache[131]=$'\x83'
write_byteCache[132]=$'\x84'
write_byteCache[133]=$'\x85'
write_byteCache[134]=$'\x86'
write_byteCache[135]=$'\x87'
write_byteCache[136]=$'\x88'
write_byteCache[137]=$'\x89'
write_byteCache[138]=$'\x8A'
write_byteCache[139]=$'\x8B'
write_byteCache[140]=$'\x8C'
write_byteCache[141]=$'\x8D'
write_byteCache[142]=$'\x8E'
write_byteCache[143]=$'\x8F'
write_byteCache[144]=$'\x90'
write_byteCache[145]=$'\x91'
write_byteCache[146]=$'\x92'
write_byteCache[147]=$'\x93'
write_byteCache[148]=$'\x94'
write_byteCache[149]=$'\x95'
write_byteCache[150]=$'\x96'
write_byteCache[151]=$'\x97'
write_byteCache[152]=$'\x98'
write_byteCache[153]=$'\x99'
write_byteCache[154]=$'\x9A'
write_byteCache[155]=$'\x9B'
write_byteCache[156]=$'\x9C'
write_byteCache[157]=$'\x9D'
write_byteCache[158]=$'\x9E'
write_byteCache[159]=$'\x9F'
write_byteCache[160]=$'\xA0'
write_byteCache[161]=$'\xA1'
write_byteCache[162]=$'\xA2'
write_byteCache[163]=$'\xA3'
write_byteCache[164]=$'\xA4'
write_byteCache[165]=$'\xA5'
write_byteCache[166]=$'\xA6'
write_byteCache[167]=$'\xA7'
write_byteCache[168]=$'\xA8'
write_byteCache[169]=$'\xA9'
write_byteCache[170]=$'\xAA'
write_byteCache[171]=$'\xAB'
write_byteCache[172]=$'\xAC'
write_byteCache[173]=$'\xAD'
write_byteCache[174]=$'\xAE'
write_byteCache[175]=$'\xAF'
write_byteCache[176]=$'\xB0'
write_byteCache[177]=$'\xB1'
write_byteCache[178]=$'\xB2'
write_byteCache[179]=$'\xB3'
write_byteCache[180]=$'\xB4'
write_byteCache[181]=$'\xB5'
write_byteCache[182]=$'\xB6'
write_byteCache[183]=$'\xB7'
write_byteCache[184]=$'\xB8'
write_byteCache[185]=$'\xB9'
write_byteCache[186]=$'\xBA'
write_byteCache[187]=$'\xBB'
write_byteCache[188]=$'\xBC'
write_byteCache[189]=$'\xBD'
write_byteCache[190]=$'\xBE'
write_byteCache[191]=$'\xBF'
write_byteCache[192]=$'\xC0'
write_byteCache[193]=$'\xC1'
write_byteCache[194]=$'\xC2'
write_byteCache[195]=$'\xC3'
write_byteCache[196]=$'\xC4'
write_byteCache[197]=$'\xC5'
write_byteCache[198]=$'\xC6'
write_byteCache[199]=$'\xC7'
write_byteCache[200]=$'\xC8'
write_byteCache[201]=$'\xC9'
write_byteCache[202]=$'\xCA'
write_byteCache[203]=$'\xCB'
write_byteCache[204]=$'\xCC'
write_byteCache[205]=$'\xCD'
write_byteCache[206]=$'\xCE'
write_byteCache[207]=$'\xCF'
write_byteCache[208]=$'\xD0'
write_byteCache[209]=$'\xD1'
write_byteCache[210]=$'\xD2'
write_byteCache[211]=$'\xD3'
write_byteCache[212]=$'\xD4'
write_byteCache[213]=$'\xD5'
write_byteCache[214]=$'\xD6'
write_byteCache[215]=$'\xD7'
write_byteCache[216]=$'\xD8'
write_byteCache[217]=$'\xD9'
write_byteCache[218]=$'\xDA'
write_byteCache[219]=$'\xDB'
write_byteCache[220]=$'\xDC'
write_byteCache[221]=$'\xDD'
write_byteCache[222]=$'\xDE'
write_byteCache[223]=$'\xDF'
write_byteCache[224]=$'\xE0'
write_byteCache[225]=$'\xE1'
write_byteCache[226]=$'\xE2'
write_byteCache[227]=$'\xE3'
write_byteCache[228]=$'\xE4'
write_byteCache[229]=$'\xE5'
write_byteCache[230]=$'\xE6'
write_byteCache[231]=$'\xE7'
write_byteCache[232]=$'\xE8'
write_byteCache[233]=$'\xE9'
write_byteCache[234]=$'\xEA'
write_byteCache[235]=$'\xEB'
write_byteCache[236]=$'\xEC'
write_byteCache[237]=$'\xED'
write_byteCache[238]=$'\xEE'
write_byteCache[239]=$'\xEF'
write_byteCache[240]=$'\xF0'
write_byteCache[241]=$'\xF1'
write_byteCache[242]=$'\xF2'
write_byteCache[243]=$'\xF3'
write_byteCache[244]=$'\xF4'
write_byteCache[245]=$'\xF5'
write_byteCache[246]=$'\xF6'
write_byteCache[247]=$'\xF7'
write_byteCache[248]=$'\xF8'
write_byteCache[249]=$'\xF9'
write_byteCache[250]=$'\xFA'
write_byteCache[251]=$'\xFB'
write_byteCache[252]=$'\xFC'
write_byteCache[253]=$'\xFD'
write_byteCache[254]=$'\xFE'
write_byteCache[255]=$'\xFF'

function write_byte()
{
	if [ $1 -eq 0 ]; then
		printf '\000'
	else
		echo -en "${write_byteCache[$1]}"
	fi
}

function write_encodeRemainingLength()
{
	if [ $1 -lt 128 ]; then
		write_byte $1
	elif [ $1 -lt 16384 ]; then
		local -ir length=$1
		write_byte $(( length % 128 + 128 ))
		write_byte $(( length / 128))
	elif [ $1 -lt 2097152 ]; then
		local -ir length=$1
		write_byte $(( (length & 127) + 128 ))
		write_byte $(( (length >> 7 & 127) + 128 ))
		write_byte $((  length >> 14 & 127 ))
	else
		local -ir length=$1
		write_byte $(( (length & 127) + 128 ))
		write_byte $(( (length >> 7 & 127) + 128 ))
		write_byte $(( (length >> 14 & 127) + 128 ))
		write_byte $((  length >> 21 & 127 ))
	fi
}
